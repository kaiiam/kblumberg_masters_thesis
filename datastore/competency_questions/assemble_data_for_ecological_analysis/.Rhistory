theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Frequency") +
xlab("Path length")
acc
acc <- ggplot(avg_clust_coef, aes(x)) +
geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Frequency") +
xlab("Path length")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(shape=1) +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Frequency") +
xlab("Path length")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(shape=2) +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Path length")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(shape=3) +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Path length")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(shape=4) +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Path length")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(shape=5) +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Path length")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(shape=21) +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Path length")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point() +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Path length")
acc
ggsave(filename = "/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/subclasses_and_subclasses_queried_directly_from_envo_polar_subset/degree_calculation/average_clustering_coefficient.jpeg",
plot = acc, width = 6, height = 4)
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(aes(colour = x)) +
scale_colour_gradient(low = "blue")  +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Number of neighbors")
acc
avg_clust_coef <- as.data.frame(read.csv(file = "avg_clust_coef",header = TRUE))
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(aes(colour = x)) +
scale_colour_gradient(low = "blue", high = "red")  +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Number of neighbors")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(aes(colour = y)) +
scale_colour_gradient(low = "blue", high = "red")  +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Number of neighbors")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(aes(colour = y)) +
scale_colour_gradient(low = "blue", high = "red", colour = "Colour\nlegend")  +
#geom_bar(fill="#1461f0") +
theme_linedraw() +
#scale_x_discrete(limits=0:45) +
ylab("Average clustering coefficient") +
xlab("Number of neighbors")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(aes(colour = y)) +
scale_colour_gradient(low = "blue", high = "red")
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(aes(colour = y)) +
scale_colour_gradient(low = "blue", high = "red")+
labs(x = "Number of neighbors", y = "Average clustering coefficient", colour = "Colour\nlegend") +
theme_linedraw()
acc
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(aes(colour = y)) +
scale_colour_gradient(low = "blue", high = "red")+
labs(x = "Number of neighbors", y = "Average clustering coefficient", colour = "clustering\ncoefficient") +
theme_linedraw()
ylab("Average clustering coefficient") +
xlab("Number of neighbors")
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point(aes(colour = y)) +
scale_colour_gradient(low = "blue", high = "red")+
labs(x = "Number of neighbors", y = "Average clustering coefficient", colour = "clustering\ncoefficient") +
theme_linedraw()
acc
ggsave(filename = "/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/subclasses_and_subclasses_queried_directly_from_envo_polar_subset/degree_calculation/average_clustering_coefficient.jpeg",
plot = spld, width = 6, height = 4)
ggsave(filename = "/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/subclasses_and_subclasses_queried_directly_from_envo_polar_subset/degree_calculation/average_clustering_coefficient.jpeg",
plot = acc, width = 6, height = 4)
Betweenness_centr <- as.data.frame(read.csv(file = "Betweenness_centr",header = TRUE))
acc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point() +
labs(x = "Number of neighbors", y = "Average clustering coefficient") +
theme_linedraw()
bc <- ggplot(avg_clust_coef, aes(x=x,y=y)) +
geom_point() +
labs(x = "Number of neighbors", y = "Average clustering coefficient") +
theme_linedraw()
bc
ggsave(filename = "/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/subclasses_and_subclasses_queried_directly_from_envo_polar_subset/degree_calculation/betweenness_centrality.jpeg",
plot = bc, width = 6, height = 4)
Betweenness_centr <- as.data.frame(read.csv(file = "Betweenness_centr",header = TRUE))
bc <- ggplot(Betweenness_centr, aes(x=x,y=y)) +
geom_point() +
labs(x = "Number of neighbors", y = "Average clustering coefficient") +
theme_linedraw()
bc
ggsave(filename = "/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/subclasses_and_subclasses_queried_directly_from_envo_polar_subset/degree_calculation/betweenness_centrality.jpeg",
plot = bc, width = 6, height = 4)
library(ggplot2)
bc <- ggplot(Betweenness_centr, aes(x=x,y=y)) +
geom_point() +
labs(x = "Number of neighbors", y = "Average clustering coefficient") +
theme_linedraw()
bc
ggsave(filename = "/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/subclasses_and_subclasses_queried_directly_from_envo_polar_subset/degree_calculation/betweenness_centrality.jpeg",
plot = bc, width = 6, height = 4)
library(vegan)
library(ggplot2)
library(dplyr)
library(tidyr)
#library(data.table)
require(stats)
setwd("/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/assemble_data_for_ ecological_analysis")
#pca_data <- read.csv(file = "PCA_output_data_transposed.csv",header = TRUE)
#have to open and save the PCA_output_data_raw.csv to properly format it as
#a csv from the output of previous script!!
p_data <- read.csv(file = "PCA_output_data_raw.csv",header = FALSE)
tp_data <- as.data.frame(t(p_data))
pca_data <- tp_data[2:23,]
colnames(pca_data) <- as.character(unlist(tp_data[1,]))
#colnames(pca_data) <- gsub("file:/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/build_datastore/","", colnames(pca_data))
#combined <- mutate(pca_data, colnames(pca_data) <- gsub("file:/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/build_datastore/","", colnames(pca_data)))
#colnames(pca_data) <- gsub("^.*csv","", colnames(pca_data))
#colnames(pca_data) <- gsub("http...purl.obolibrary.org.obo.","_", colnames(pca_data))
columns_string <- "influence_snow_depth.csvSignalStrength|inorganic_nutrients.csvNitrate|physical_oceanography.csvOxygen|inorganic_nutrients.csvPhosphate|physical_oceanography.csvSalinity|ice_algal_chlorophyll_myi.csvIceOrSnowTemperature|influence_snow_depth.csvSeaIceThickness"
c <- grep(columns_string, colnames(pca_data))
data <- cbind(pca_data[c])
colnames(data) <- gsub("^.*csv","", colnames(data))
colnames(data) <- gsub("http...purl.obolibrary.org.obo.","_", colnames(data))
#convert from factors to numeric
indx <- sapply(data, is.factor)
data[indx] <- lapply(data[indx], function(x) as.numeric(as.character(x)))
#zscore the data
#find all numeric columns
indx <- sapply(data, is.numeric)
#apply the zcore function via scale to the numeric columns making the result a dataframe.
data.zscored <- as.data.frame(lapply(data[,indx], function(x) scale(x, center = TRUE, scale = TRUE)))
# perform PCA on filtered data
#for PCA see https://rstudio-pubs-static.s3.amazonaws.com/259028_dbe846c67e144065b4c2bcd012fb130d.html
# Doing unconstrained RDA (PCA) on my data
my.rda <- rda(data.zscored)
pca_plot <- biplot(my.rda, display = c("sites", "species"), type = c("text", "points"))
(my.rda$CA$eig/(sum(my.rda$CA$eig))*100)
my.rda$pCCA
pca_plot$species
#Add hulls
#spp.names <- levels(data[,1])
#ordihull(my.rda, group = data[,1], col = c("blue","green","orange"))
#legend("topright", col = c("blue","green","orange"), lty = 1, legend = spp.names)
#########################
# trying out different analysis
#data(dune)
#data(dune.env)
#dune.Manure <- rda(dune ~ Manure, dune.env)
#plot(dune.Manure)
#example pcoA with dune data
# Draw a plot for a non-vegan ordination (cmdscale).
#data(dune)
#dune.dis <- vegdist(wisconsin(dune))
#dune.mds <- cmdscale(dune.dis, eig = TRUE)
#dune.mds$species <- wascores(dune.mds$points, dune, expand = TRUE)
#fig <- ordiplot(dune.mds, type = "none")
#points(fig, "sites", pch=21, col="red", bg="yellow")
#text(fig, "species", col="blue", cex=0.9)
# Default plot of the previous using identify to label selected points
# trying pcoa on my data
#my.dis <- vegdist(wisconsin(combined[,-1]))
#my.pcoa <- cmdscale(my.dis, eig = TRUE)
#fig <- ordiplot(my.pcoa, type = "text")
#my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#fig <- ordiplot(my.pcoa, type = "none")
#text(fig, "species", col="red", cex=0.7)
#points(fig, "sites", col=c("blue","blue","green","green"), cex=1.2, pch=21)
#text(fig, "sites", col=c("blue","blue","green","green"), cex=0.9)
#spp.names <- levels(combined$sample)
#legend("topright", col = c("blue","green"), lty = 1, legend = spp.names)
# old example
#my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#fig <- ordiplot(my.pcoa, type = "none")
#points(fig, "sites", pch=21, col="red", bg="yellow")
#text(fig, "species", col="blue", cex=0.9)
## Principal coordinates analysis with extended dissimilarities
#data(varespec)
#vare.pcoa <- capscale(varespec ~ 1, dist="bray", metaMDS = TRUE)
#plot <- ordiplot(vare.pcoa, type = "text")
# try pcoa on dune data
#dune.pcoa <- capscale(dune ~ 1, distance = "bray", sqrt.dist = FALSE,
#                  dfun = vegdist, metaMDSdist = TRUE)
#fig <- ordiplot(dune.pcoa, type = "text")
# try pcoa on my data
#my.pcoa <- capscale(combined[,-1] ~ 1, distance = "bray", sqrt.dist = FALSE,
#                      dfun = vegdist, metaMDSdist = TRUE)
#fig1 <- ordiplot(my.pcoa, type = "text")
library(vegan)
library(ggplot2)
library(dplyr)
library(tidyr)
#library(data.table)
require(stats)
setwd("/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/assemble_data_for_ ecological_analysis")
#pca_data <- read.csv(file = "PCA_output_data_transposed.csv",header = TRUE)
#have to open and save the PCA_output_data_raw.csv to properly format it as
#a csv from the output of previous script!!
p_data <- read.csv(file = "PCA_output_data_raw.csv",header = FALSE)
tp_data <- as.data.frame(t(p_data))
pca_data <- tp_data[2:23,]
colnames(pca_data) <- as.character(unlist(tp_data[1,]))
#colnames(pca_data) <- gsub("file:/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/build_datastore/","", colnames(pca_data))
#combined <- mutate(pca_data, colnames(pca_data) <- gsub("file:/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/build_datastore/","", colnames(pca_data)))
#colnames(pca_data) <- gsub("^.*csv","", colnames(pca_data))
#colnames(pca_data) <- gsub("http...purl.obolibrary.org.obo.","_", colnames(pca_data))
columns_string <- "influence_snow_depth.csvSignalStrength|inorganic_nutrients.csvNitrate|physical_oceanography.csvOxygen|inorganic_nutrients.csvPhosphate|physical_oceanography.csvSalinity|ice_algal_chlorophyll_myi.csvIceOrSnowTemperature|influence_snow_depth.csvSeaIceThickness"
c <- grep(columns_string, colnames(pca_data))
data <- cbind(pca_data[c])
colnames(data) <- gsub("^.*csv","", colnames(data))
colnames(data) <- gsub("http...purl.obolibrary.org.obo.","_", colnames(data))
#convert from factors to numeric
indx <- sapply(data, is.factor)
data[indx] <- lapply(data[indx], function(x) as.numeric(as.character(x)))
#zscore the data
#find all numeric columns
indx <- sapply(data, is.numeric)
#apply the zcore function via scale to the numeric columns making the result a dataframe.
data.zscored <- as.data.frame(lapply(data[,indx], function(x) scale(x, center = TRUE, scale = TRUE)))
# perform PCA on filtered data
#for PCA see https://rstudio-pubs-static.s3.amazonaws.com/259028_dbe846c67e144065b4c2bcd012fb130d.html
# Doing unconstrained RDA (PCA) on my data
my.rda <- rda(data.zscored)
pca_plot <- biplot(my.rda, display = c("sites", "species"), cex=1.4, type = c("text", "points"))
(my.rda$CA$eig/(sum(my.rda$CA$eig))*100)
my.rda$pCCA
pca_plot$species
#Add hulls
#spp.names <- levels(data[,1])
#ordihull(my.rda, group = data[,1], col = c("blue","green","orange"))
#legend("topright", col = c("blue","green","orange"), lty = 1, legend = spp.names)
#########################
# trying out different analysis
#data(dune)
#data(dune.env)
#dune.Manure <- rda(dune ~ Manure, dune.env)
#plot(dune.Manure)
#example pcoA with dune data
# Draw a plot for a non-vegan ordination (cmdscale).
#data(dune)
#dune.dis <- vegdist(wisconsin(dune))
#dune.mds <- cmdscale(dune.dis, eig = TRUE)
#dune.mds$species <- wascores(dune.mds$points, dune, expand = TRUE)
#fig <- ordiplot(dune.mds, type = "none")
#points(fig, "sites", pch=21, col="red", bg="yellow")
#text(fig, "species", col="blue", cex=0.9)
# Default plot of the previous using identify to label selected points
# trying pcoa on my data
#my.dis <- vegdist(wisconsin(combined[,-1]))
#my.pcoa <- cmdscale(my.dis, eig = TRUE)
#fig <- ordiplot(my.pcoa, type = "text")
#my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#fig <- ordiplot(my.pcoa, type = "none")
#text(fig, "species", col="red", cex=0.7)
#points(fig, "sites", col=c("blue","blue","green","green"), cex=1.2, pch=21)
#text(fig, "sites", col=c("blue","blue","green","green"), cex=0.9)
#spp.names <- levels(combined$sample)
#legend("topright", col = c("blue","green"), lty = 1, legend = spp.names)
# old example
#my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#fig <- ordiplot(my.pcoa, type = "none")
#points(fig, "sites", pch=21, col="red", bg="yellow")
#text(fig, "species", col="blue", cex=0.9)
## Principal coordinates analysis with extended dissimilarities
#data(varespec)
#vare.pcoa <- capscale(varespec ~ 1, dist="bray", metaMDS = TRUE)
#plot <- ordiplot(vare.pcoa, type = "text")
# try pcoa on dune data
#dune.pcoa <- capscale(dune ~ 1, distance = "bray", sqrt.dist = FALSE,
#                  dfun = vegdist, metaMDSdist = TRUE)
#fig <- ordiplot(dune.pcoa, type = "text")
# try pcoa on my data
#my.pcoa <- capscale(combined[,-1] ~ 1, distance = "bray", sqrt.dist = FALSE,
#                      dfun = vegdist, metaMDSdist = TRUE)
#fig1 <- ordiplot(my.pcoa, type = "text")
pca_plot
pca_plot <- biplot(my.rda, display = c("sites", "species"), cex=1.4, type = c("text", "points"))
library(vegan)
library(ggplot2)
library(dplyr)
library(tidyr)
#library(data.table)
require(stats)
setwd("/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/assemble_data_for_ ecological_analysis")
#pca_data <- read.csv(file = "PCA_output_data_transposed.csv",header = TRUE)
#have to open and save the PCA_output_data_raw.csv to properly format it as
#a csv from the output of previous script!!
p_data <- read.csv(file = "PCA_output_data_raw.csv",header = FALSE)
tp_data <- as.data.frame(t(p_data))
pca_data <- tp_data[2:23,]
colnames(pca_data) <- as.character(unlist(tp_data[1,]))
#colnames(pca_data) <- gsub("file:/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/build_datastore/","", colnames(pca_data))
#combined <- mutate(pca_data, colnames(pca_data) <- gsub("file:/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/build_datastore/","", colnames(pca_data)))
#colnames(pca_data) <- gsub("^.*csv","", colnames(pca_data))
#colnames(pca_data) <- gsub("http...purl.obolibrary.org.obo.","_", colnames(pca_data))
columns_string <- "influence_snow_depth.csvSignalStrength|inorganic_nutrients.csvNitrate|physical_oceanography.csvOxygen|inorganic_nutrients.csvPhosphate|physical_oceanography.csvSalinity|ice_algal_chlorophyll_myi.csvIceOrSnowTemperature|influence_snow_depth.csvSeaIceThickness"
c <- grep(columns_string, colnames(pca_data))
data <- cbind(pca_data[c])
colnames(data) <- gsub("^.*csv","", colnames(data))
colnames(data) <- gsub("http...purl.obolibrary.org.obo.","_", colnames(data))
#convert from factors to numeric
indx <- sapply(data, is.factor)
data[indx] <- lapply(data[indx], function(x) as.numeric(as.character(x)))
#zscore the data
#find all numeric columns
indx <- sapply(data, is.numeric)
#apply the zcore function via scale to the numeric columns making the result a dataframe.
data.zscored <- as.data.frame(lapply(data[,indx], function(x) scale(x, center = TRUE, scale = TRUE)))
# perform PCA on filtered data
#for PCA see https://rstudio-pubs-static.s3.amazonaws.com/259028_dbe846c67e144065b4c2bcd012fb130d.html
# Doing unconstrained RDA (PCA) on my data
my.rda <- rda(data.zscored)
pca_plot <- biplot(my.rda, display = c("sites", "species"), cex=1.6, type = c("text", "points"))
(my.rda$CA$eig/(sum(my.rda$CA$eig))*100)
my.rda$pCCA
pca_plot$species
#Add hulls
#spp.names <- levels(data[,1])
#ordihull(my.rda, group = data[,1], col = c("blue","green","orange"))
#legend("topright", col = c("blue","green","orange"), lty = 1, legend = spp.names)
#########################
# trying out different analysis
#data(dune)
#data(dune.env)
#dune.Manure <- rda(dune ~ Manure, dune.env)
#plot(dune.Manure)
#example pcoA with dune data
# Draw a plot for a non-vegan ordination (cmdscale).
#data(dune)
#dune.dis <- vegdist(wisconsin(dune))
#dune.mds <- cmdscale(dune.dis, eig = TRUE)
#dune.mds$species <- wascores(dune.mds$points, dune, expand = TRUE)
#fig <- ordiplot(dune.mds, type = "none")
#points(fig, "sites", pch=21, col="red", bg="yellow")
#text(fig, "species", col="blue", cex=0.9)
# Default plot of the previous using identify to label selected points
# trying pcoa on my data
#my.dis <- vegdist(wisconsin(combined[,-1]))
#my.pcoa <- cmdscale(my.dis, eig = TRUE)
#fig <- ordiplot(my.pcoa, type = "text")
#my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#fig <- ordiplot(my.pcoa, type = "none")
#text(fig, "species", col="red", cex=0.7)
#points(fig, "sites", col=c("blue","blue","green","green"), cex=1.2, pch=21)
#text(fig, "sites", col=c("blue","blue","green","green"), cex=0.9)
#spp.names <- levels(combined$sample)
#legend("topright", col = c("blue","green"), lty = 1, legend = spp.names)
# old example
#my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#fig <- ordiplot(my.pcoa, type = "none")
#points(fig, "sites", pch=21, col="red", bg="yellow")
#text(fig, "species", col="blue", cex=0.9)
## Principal coordinates analysis with extended dissimilarities
#data(varespec)
#vare.pcoa <- capscale(varespec ~ 1, dist="bray", metaMDS = TRUE)
#plot <- ordiplot(vare.pcoa, type = "text")
# try pcoa on dune data
#dune.pcoa <- capscale(dune ~ 1, distance = "bray", sqrt.dist = FALSE,
#                  dfun = vegdist, metaMDSdist = TRUE)
#fig <- ordiplot(dune.pcoa, type = "text")
# try pcoa on my data
#my.pcoa <- capscale(combined[,-1] ~ 1, distance = "bray", sqrt.dist = FALSE,
#                      dfun = vegdist, metaMDSdist = TRUE)
#fig1 <- ordiplot(my.pcoa, type = "text")
library(vegan)
library(ggplot2)
library(dplyr)
library(tidyr)
#library(data.table)
require(stats)
setwd("/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/competency_questions/assemble_data_for_ ecological_analysis")
#pca_data <- read.csv(file = "PCA_output_data_transposed.csv",header = TRUE)
#have to open and save the PCA_output_data_raw.csv to properly format it as
#a csv from the output of previous script!!
p_data <- read.csv(file = "PCA_output_data_raw.csv",header = FALSE)
tp_data <- as.data.frame(t(p_data))
pca_data <- tp_data[2:23,]
colnames(pca_data) <- as.character(unlist(tp_data[1,]))
#colnames(pca_data) <- gsub("file:/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/build_datastore/","", colnames(pca_data))
#combined <- mutate(pca_data, colnames(pca_data) <- gsub("file:/home/kai/Desktop/grad_school/marmic/master_thesis/kblumberg_masters_thesis/datastore/build_datastore/","", colnames(pca_data)))
#colnames(pca_data) <- gsub("^.*csv","", colnames(pca_data))
#colnames(pca_data) <- gsub("http...purl.obolibrary.org.obo.","_", colnames(pca_data))
columns_string <- "influence_snow_depth.csvSignalStrength|inorganic_nutrients.csvNitrate|physical_oceanography.csvOxygen|inorganic_nutrients.csvPhosphate|physical_oceanography.csvSalinity|ice_algal_chlorophyll_myi.csvIceOrSnowTemperature|influence_snow_depth.csvSeaIceThickness"
c <- grep(columns_string, colnames(pca_data))
data <- cbind(pca_data[c])
colnames(data) <- gsub("^.*csv","", colnames(data))
colnames(data) <- gsub("http...purl.obolibrary.org.obo.","_", colnames(data))
#convert from factors to numeric
indx <- sapply(data, is.factor)
data[indx] <- lapply(data[indx], function(x) as.numeric(as.character(x)))
#zscore the data
#find all numeric columns
indx <- sapply(data, is.numeric)
#apply the zcore function via scale to the numeric columns making the result a dataframe.
data.zscored <- as.data.frame(lapply(data[,indx], function(x) scale(x, center = TRUE, scale = TRUE)))
# perform PCA on filtered data
#for PCA see https://rstudio-pubs-static.s3.amazonaws.com/259028_dbe846c67e144065b4c2bcd012fb130d.html
# Doing unconstrained RDA (PCA) on my data
my.rda <- rda(data.zscored)
pca_plot <- biplot(my.rda, display = c("sites", "species"), cex=2, type = c("text", "points"))
(my.rda$CA$eig/(sum(my.rda$CA$eig))*100)
my.rda$pCCA
pca_plot$species
#Add hulls
#spp.names <- levels(data[,1])
#ordihull(my.rda, group = data[,1], col = c("blue","green","orange"))
#legend("topright", col = c("blue","green","orange"), lty = 1, legend = spp.names)
#########################
# trying out different analysis
#data(dune)
#data(dune.env)
#dune.Manure <- rda(dune ~ Manure, dune.env)
#plot(dune.Manure)
#example pcoA with dune data
# Draw a plot for a non-vegan ordination (cmdscale).
#data(dune)
#dune.dis <- vegdist(wisconsin(dune))
#dune.mds <- cmdscale(dune.dis, eig = TRUE)
#dune.mds$species <- wascores(dune.mds$points, dune, expand = TRUE)
#fig <- ordiplot(dune.mds, type = "none")
#points(fig, "sites", pch=21, col="red", bg="yellow")
#text(fig, "species", col="blue", cex=0.9)
# Default plot of the previous using identify to label selected points
# trying pcoa on my data
#my.dis <- vegdist(wisconsin(combined[,-1]))
#my.pcoa <- cmdscale(my.dis, eig = TRUE)
#fig <- ordiplot(my.pcoa, type = "text")
#my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#fig <- ordiplot(my.pcoa, type = "none")
#text(fig, "species", col="red", cex=0.7)
#points(fig, "sites", col=c("blue","blue","green","green"), cex=1.2, pch=21)
#text(fig, "sites", col=c("blue","blue","green","green"), cex=0.9)
#spp.names <- levels(combined$sample)
#legend("topright", col = c("blue","green"), lty = 1, legend = spp.names)
# old example
#my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#fig <- ordiplot(my.pcoa, type = "none")
#points(fig, "sites", pch=21, col="red", bg="yellow")
#text(fig, "species", col="blue", cex=0.9)
## Principal coordinates analysis with extended dissimilarities
#data(varespec)
#vare.pcoa <- capscale(varespec ~ 1, dist="bray", metaMDS = TRUE)
#plot <- ordiplot(vare.pcoa, type = "text")
# try pcoa on dune data
#dune.pcoa <- capscale(dune ~ 1, distance = "bray", sqrt.dist = FALSE,
#                  dfun = vegdist, metaMDSdist = TRUE)
#fig <- ordiplot(dune.pcoa, type = "text")
# try pcoa on my data
#my.pcoa <- capscale(combined[,-1] ~ 1, distance = "bray", sqrt.dist = FALSE,
#                      dfun = vegdist, metaMDSdist = TRUE)
#fig1 <- ordiplot(my.pcoa, type = "text")
